/* src/pages/Profile/AdminProfile.module.scss */
/* Neumorphic white card + soft electronics blue accents */

$bg: #e0e5ec;
$light: #ffffff;
$shadow: #bec3cf;

$text: #3d4468;
$muted: #8090b0;
$blue: #6aa9ff;
$green: #35c28a;
$red: #ff6a6a;

@mixin neu($d: 12px, $b: 24px) {
  box-shadow: #{$d} #{$d} #{$b} $shadow, -#{$d} -#{$d} #{$b} $light;
}
@mixin neu-inset($d: 8px, $b: 16px) {
  box-shadow: inset #{$d} #{$d} #{$b} $shadow, inset -#{$d} -#{$d} #{$b} $light;
}

.wrap {
  min-height: 100dvh;
  display: grid;
  place-items: center;
  padding: 32px 18px;
  background:
    radial-gradient(1200px 600px at 70% 30%, #ffffff 0%, #f3f6fb 60%),
    linear-gradient(135deg, #ffffff, #f3f6fb);
}

.card {
  width: min(880px, 94vw);
  background: $bg;
  border-radius: 28px;
  padding: 28px 26px;
  @include neu(20px, 60px);
  color: $text;
}

.loading {
  text-align: center;
  color: $muted;
  padding: 40px 0;
}

/* header */
.header {
  display: grid;
  grid-template-columns: 72px 1fr;
  gap: 16px;
  align-items: center;
  margin-bottom: 10px;
}

.avatar {
  width: 72px;
  height: 72px;
  border-radius: 999px;
  overflow: hidden;
  background: linear-gradient(135deg, rgba($blue,.2), rgba(255,255,255,.6));
  border: 2px solid rgba($blue,.35);
  display: grid; place-items: center;
  img { width: 100%; height: 100%; object-fit: cover; display: block; }
}
.initial {
  font-weight: 900;
  font-size: 28px;
  color: #fff;
  text-shadow: 0 6px 14px rgba($blue,.35);
}

.headMeta { display: flex; flex-direction: column; gap: 4px; }
.name { margin: 0; font-size: 1.5rem; font-weight: 900; letter-spacing: .2px; }
.role { margin: 0; color: $muted; }

/* details grid */
.grid {
  margin-top: 18px;
  display: grid;
  grid-template-columns: repeat(2, minmax(0,1fr));
  gap: 14px 18px;
}

.item {
  background: $bg;
  border-radius: 16px;
  padding: 14px 16px;
  @include neu-inset(8px, 16px);
}
.label {
  display: block;
  font-size: .82rem;
  color: $muted;
  margin-bottom: 6px;
  letter-spacing: .2px;
}
.value {
  font-weight: 700;
  word-break: break-word;
  color: $text;
}

/* availability */
.availBlock {
  margin-top: 20px;
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  gap: 12px 16px;
}

.toggle {
  position: relative;
  background: $bg;
  border-radius: 999px;
  padding: 6px;
  width: 240px;
  @include neu-inset(8px, 16px);
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  gap: 6px;

  input {
    /* hide native radio, keep accessible */
    position: absolute;
    opacity: 0;
    pointer-events: none;
  }

  label {
    position: relative;
    z-index: 1;
    text-align: center;
    padding: 10px 6px;
    border-radius: 999px;
    font-weight: 800;
    color: $muted;
    cursor: pointer;
    user-select: none;
    transition: color .18s ease;
  }
}

.toggleBg {
  position: absolute; inset: 6px;
  width: calc(50% - 6px);
  border-radius: 999px;
  background: linear-gradient(135deg, rgba($blue,.28), rgba($blue,.18));
  box-shadow: 0 6px 18px rgba($blue,.24), inset 0 0 0 1px rgba(255,255,255,.35);
  transition: transform .22s ease;
}
.toggleBg[data-pos="left"]  { transform: translateX(0%); }
.toggleBg[data-pos="right"] { transform: translateX(100%); }

/* when active, tint label */
input#avail-yes:checked ~ label[for="avail-yes"],
input#avail-no:checked  ~ label[for="avail-no"] {
  color: #1b2a44;
}

.badge {
  font-size: .82rem;
  font-weight: 900;
  letter-spacing: .3px;
  padding: 6px 10px;
  border-radius: 999px;
  border: 1px solid transparent;
}
.badgeOn  { color: #0d3b2a; background: rgba($green,.18); border-color: rgba($green,.36); }
.badgeOff { color: #4a1a1a; background: rgba($red,.15);   border-color: rgba($red,.34); }

/* actions */
.actions {
  margin-top: 18px;
  display: flex;
  align-items: center;
  gap: 12px;
}

.button {
  border: 0;
  border-radius: 16px;
  padding: 14px 18px;
  background: $bg;
  color: $text;
  font-weight: 800;
  letter-spacing: .2px;
  cursor: pointer;
  @include neu(10px, 22px);
  transition: transform .1s ease;

  &:hover { transform: translateY(-1px); @include neu(12px, 28px); }
  &:active { transform: translateY(0); @include neu-inset(6px, 12px); }
  &:disabled { opacity: .6; cursor: not-allowed; }
}

.saved {
  color: $green;
  font-weight: 800;
}

/* responsive tweaks */
@media (max-width: 640px) {
  .grid { grid-template-columns: 1fr; }
  .availBlock { grid-template-columns: 1fr; justify-items: start; }
  .toggle { width: 100%; }
}
